%{!?python_sitearch: %define python_sitearch %(%{__python} -c "from distutils.sysconfig import get_python_lib; print get_python_lib(1)")}
# eval to 2.3 if python isn't yet present, workaround for no python in fc4 minimal buildroot
%{!?python_version: %define python_version %(%{__python} -c 'import sys; print sys.version.split(" ")[0]' || echo "2.3")}
%define _cmake_skip_rpath %{nil}
#%define _cmake_skip_rpath -DCMAKE_SKIP_RPATH:BOOL=OFF
%define version @PACKAGE_VERSION_MAJOR@.@PACKAGE_VERSION_MINOR@
%define release @PACKAGE_VERSION_PATCH@

Name:         @PROJECT_NAME@
Version:      %{version}
Release:      %{release}
Epoch:        0
Summary:      The OpenMEEG package.

Group:        Applications/Medical
License:      CeCILL-B
Url:          https://gforge.inria.fr/projects/openmeeg/
Packager:     Theodore Papadopoulo <Theodore.Papadopoulo@inria.fr>
Vendor:       Athena ENPC/INRIA/Ens Ulm 
Distribution: research software

Source: @CPACK_SOURCE_PACKAGE_FILE_NAME@.tar.gz
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildRequires: cmake

%define srcdirname %{name}-%{version}.%{release}-Source
%define builddirname %{_tmppath}/%{name}.build

%description
@PROJECT_NAME@ is a package for forward/inverse problems of EEG/MEG. The forward problem uses the symmetric Boundary Element Method.
The inverse problem uses a distributed approach (L2, L1 regularization). Developped within Athena (INRIA-ENPC-ENS).

%package python
Summary:      Development files for the python interface to @PROJECT_NAME@.
Group:        Development/Libraries
Requires:     %{name} = %{epoch}:%{version}-%{release}

%description python
This package contains all the necessary files to acces @PROJECT_NAME@ from the python language.
This enables the creation of customized complex scripts using the basic blocks of @PROJECT_NAME@.

%package doc
Summary:      Documentation files for @PROJECT_NAME@.
Group:        Documentation
Requires:     %{name} = %{epoch}:%{version}-%{release}

%description doc
Documentation for @PROJECT_NAME@.

%package matio
Summary:      Development files for the matio library used in @PROJECT_NAME@.
Group:        Development/Libraries

%description matio
This package provides the matio library which allows reading/writing matlab files, which
is used in @PROJECT_NAME@.

%prep
%setup -q -n %{srcdirname}

%build
rm -rf %{builddirname}
mkdir %{builddirname}
cd %{builddirname}
%cmake -DBUILD_DOCUMENTATION=ON -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_PYTHON=ON -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_DOCUMENTATION=ON -DBUILD_TUTORIALS=ON -DUSE_PROGRESSBAR=ON -DUSE_OMP=ON @CMAKE_SOURCE_DIR@
make

%check
cd %{builddirname}
make test

%install
rm -rf $RPM_BUILD_ROOT
cd %{builddirname}
make DESTDIR=$RPM_BUILD_ROOT install

%clean
rm -rf %{builddirname}
rm -rf $RPM_BUILD_ROOT
rm -rf %{srcdirname}

%files
%defattr(-,root,root,-)
%{_bindir}/*
%{_libdir}/lib@PROJECT_NAME@*
%{_libdir}/*.cmake
%{_includedir}/openmeeg/*

%files matio
%{_libdir}/libmatio.so
%{_includedir}/matio*.h
%{_docdir}/matio/*

%files python
%defattr(644,root,root,-)
%{python_sitearch}/*

%files doc
%defattr(-,root,root,-)
%{_docdir}/OpenMEEG/*

%changelog
- Support added for MKL and OpenBLAS on all platforms
- Support for non nested geometries
- Support for CGAL meshing tools, VTK formats
- Adding Cortical Gain matrices and EIT Gain matrices computations
- Bug fixes, adding more tests
